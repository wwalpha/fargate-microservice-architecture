name: Build and Deploy to ECS Frontend Service

on:
  push:
    paths:
      - frontend/**
      - .github/workflows/frontend.yml

env:
  ECR_REPOSITORY: onecloud-fargate-frontend
  TAKS_DEFINITION: onecloud-fargate-frontend
  TAKS_DEFINITION_FILE: task_definition.json
  SERVICE_NAME: frontend
  CLUSTER_NAME: onecloud-fargate-microservice

jobs:
  build:
    name: Build and Deploy to ECS Frontend Service
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      # Install Python
      - name: Setup Python 3.7 for awscli
        uses: actions/setup-python@v1
        with:
          version: '3.7'
          architecture: 'x64'

      # Install AWS CLI
      - name: Install awscli
        run: pip install --upgrade pip awscli

      # AWS Credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # Get latest task definition
      - name: update ecs task definition
        run: aws ecs describe-task-definition --task-definition $TAKS_DEFINITION | jq .taskDefinition > $TAKS_DEFINITION_FILE

      # ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # docker build and push
      - name: Build, tag, and push image to Amazon ECR
        working-directory: frontend
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      # update task definition
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TAKS_DEFINITION_FILE }}
          container-name: ${{ env.ECR_REPOSITORY }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          service: ${{ env.SERVICE_NAME }}
          cluster: ${{ env.CLUSTER_NAME }}
          wait-for-service-stability: false
